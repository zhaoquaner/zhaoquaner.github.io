<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>测试</title>
    <link href="/2022/05/09/%E6%B5%8B%E8%AF%95/"/>
    <url>/2022/05/09/%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>这是一篇测试文章。</p><h1 id="1-SpringBoot概述"><a href="#1-SpringBoot概述" class="headerlink" title="1-SpringBoot概述"></a>1-SpringBoot概述</h1><p>SpringBoot的设计目的是<strong>简化</strong>Spring应用的初始搭建和开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不需要定义样板化的配置。</p><p>在以往采用SpringMVC+Spring+MyBatis开发时，搭建和整合三大框架，需要做很多工作，配置web.xml。配置Spring和MyBatis。而SpringBoot框架对此开发过程进行了革命性颠覆，完全抛弃了繁琐的xml配置过程，采用大量默认配置来简化开发过程。</p><p>​</p><h2 id="SpringBoot特性"><a href="#SpringBoot特性" class="headerlink" title="SpringBoot特性"></a>SpringBoot特性</h2><p>SpringBoot有这些特性：</p><ol><li>能够快速创建基于Spring的应用程序</li><li>能够直接使用java的main方法启动内嵌的Tomcat服务器运行SpringBoot程序，不用部署war包</li><li>提供约定的starter POM来简化Maven配置，使Maven配置更简单</li><li>自动化配置，根据项目Maven依赖配置，SpringBoot自动配置Spring、SpringMVC。</li><li>提供了程序的健康检查功能</li><li>基本不使用XML配置文件，采用注解配置</li></ol><p>SpringBoot有四大核心：</p><ol><li>自动配置：针对很多Spring常见的功能，SpringBoot能自动提供相关配置</li><li>起步依赖，在创建SpringBoot项目时，告诉SpringBoot需要什么功能， 它就会自动引入相关依赖库</li><li>Actuator：能够深入运行中的SpringBoot应用程序，一探SpringBoot程序内部信息</li><li>命令行界面：这是SpringBoot的可选特性，主要针对Groovy语言使用。</li></ol><h2 id="第一个SpringBoot项目"><a href="#第一个SpringBoot项目" class="headerlink" title="第一个SpringBoot项目"></a>第一个SpringBoot项目</h2><p>使用IDEA来创建SpringBoot项目，使用Spring Initializr来创建SpringBoot项目。可以使用默认的<code>https://start.spring.io</code>，也可以使用阿里提供的<code>http://start.aliyun.com</code>。</p><p>jdk版本要大于8。</p><p>点击Next：</p><img src="https://crayon-1302863897.cos.ap-beijing.myqcloud.com/image/image-20210121142542978.png" alt="image-20210121142542978" style="zoom:50%;" /><p>其中：</p><ul><li>Group和Artifact和Maven配置一样。</li><li>Packaging是用来设定打包方式，默认使用jar</li><li>Package指定SpringBoot启动类所在的包路径</li></ul><p>点击Next：</p><img src="https://crayon-1302863897.cos.ap-beijing.myqcloud.com/image/image-20210121143108611.png" alt="image-20210121143108611" style="zoom:50%;" /><p>在此处添加所需要的依赖。</p><p>然后下一步来设置模块名称，Content root的根路径和模块文件的根路径。就创建成功了。</p><p>SpringBoot的pom文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></div></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!--继承SpringBoot框架的一个父项目，所有自己开发的Spring Boot都必须的继承--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.1.5.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">relativePath</span>/&gt;</span> <span class="hljs-comment">&lt;!-- lookup parent from repository --&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.example<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>10-SpringBootDemo<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>10-SpringBootDemo<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>Demo project for Spring Boot<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--maven属性配置，可以在其它地方通过$&#123;&#125;方式进行引用--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">java.version</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">java.version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--SpringBoot框架web项目起步依赖，通过该依赖自动关联其它依赖，不需要我们一个一个去添加了--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!--SpringBoot框架的测试起步依赖，例如：junit测试，如果不需要的话可以删除--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--SpringBoot提供的打包编译等插件--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br></code></pre></td></tr></table></figure><p>项目目录结构：<br><img src="https://crayon-1302863897.cos.ap-beijing.myqcloud.com/image/image-20210121143642447.png" alt="image-20210121143642447" style="zoom:50%;" /></p><ul><li>mvn、mvnw、mvnw.cmd：使用脚本执行maven相关命令，用的较少，可以删除</li><li>gitignore：使用版本控制工具git时，设置忽略提交的内容</li><li>static、templates：后面模板技术存放文件的目录</li><li>application.properties：SpringBoot 的配置文件，集成的配置都可以在该文件中进行配置，例如Spring、SpringMVC、MyBatis和Redis等。</li><li>Application.java：SpringBoot程序执行入口，执行该程序中main方法，SpringBoot就启动了。</li></ul><p>SpringBoot项目代码要放在Application类的同级目录或下级目录中。</p><p><strong>即contoller、entity、dao、service、exception等包要和Application类放在同一级或下级目录中，并通过注解来设置。</strong></p><p>一般在Application类同级目录创建一个web包，把所有代码放在web包中。</p><p>在web包下创建一个控制器，仍然使用@Controller注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpringBootController</span> &#123;<br><br><br>    <span class="hljs-meta">@RequestMapping(value = &quot;/springboot/sayHello&quot;)</span><br>    <span class="hljs-meta">@ResponseBody</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">sayHello</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Hello, Spring Boot&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在DemoApplication运行main方法，启动该项目。</p><p><img src="https://crayon-1302863897.cos.ap-beijing.myqcloud.com/image/image-20210121145751590.png" alt="image-20210121145751590"></p><h2 id="需要注意的几个地方"><a href="#需要注意的几个地方" class="headerlink" title="需要注意的几个地方"></a>需要注意的几个地方</h2><ol><li><p>SpringBoot的父级依赖spring-boot-starter-parent配置之后，当前项目是一个SpringBoot项目。</p></li><li><p>spring-boot-starter-parent是一个SpringBoot 的父级依赖，开发SpringBoot程序都需要继承该父级项目，它用来提供相关Maven的默认依赖，使用它之后，常用的jar依赖可以省去version配置。</p></li><li><p>SpringBoot提供了哪些默认jar包的依赖，可以查看该父级依赖的pom文件</p></li><li><p>如果不想使用默认的依赖版本，可以通过pom文件属性配置覆盖各个依赖项，比如覆盖spring版本：</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">spring.version</span>&gt;</span>5.0.0.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">spring.version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>@SpringBootApplication注解是SpringBoot的核心注解，主要的作用是开启Spring自动配置</p></li><li><p>main方法是标准的Java程序的main方法，作为项目启动运行的入口</p></li><li><p>@Controller及@ResponseBody仍然是之前学过的SpringMVC，因为SpringBoot里面仍然使用的是SpringMVC、Spring和MyBatis等框架。</p></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/05/09/hello-world/"/>
    <url>/2022/05/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
